function delta_est = estimate(se_in, neighbors, N, compromised_agent)
% FILE: estimate.m implemenets a consensus-based estimation protocol
%
% DESCRIPTION:
% Each agent updates their own estimate by applying the
% consensus protocol with its neighbors.
%
% INPUTS:
% se_in - everyone's current sensor estimates (Nx1 vector of estimates)
% se_in(ii, 1) is the estimate of agent ii; se_in(jj, 1) is the estimate of
% agent jj
% neighbors - NxN matrix; entry (ii, jj) is 1 if agents ii and jj are
% neighbors; otherwise, entry is 0
% N - the number of robots in the swarm
% compromised_agent - id of malicious actor
%
% OUTPUTS:
% delta_est - the change in estimate required to arrive at a consensus, or 
% basically, how much each should modify its own estimates; 
% delta_est(ii, 1) is how much agent ii's estimates will be changed
%
% TODO:
% Agents should modify their estimates without being influenced by the 
% malicious actor. We want agents to run consensus, but we don't 
% want the swarm to be influenced by the malicious actor. Feel free to
% amend the argument list of this function, if you must. 

%% Authors: Safwan Alam, Musad Haque - 2019
%%%%%%%%%%%%%

% How much agents should change their current estimate; initialized to 0
% for each agent
delta_est = zeros(N, 1);

% Weight used in consensus equation
weight_consensus = 0.0015;

for ii = 1:1:N
    for jj = 1:1:N
        
        %%%%% Bad actor doing its own thing
        % Do not modify!!!
        if (ii == compromised_agent)
            break
        end
        %%%%%

        %%%%% Everyone else running consensus
        % The way it is now, agents are susceptible to the 
        % malicious agent :-( The goal is to run consensus and come to an 
        % agreement, but not be influenced by the bad actor. You can't use
        % the variable `compromised_agent` and you can't solve the problem
        % for the swarm. Each agent ii must make a decision by interacting
        % with its neighbors.
        %%%%%
        if ((ii ~= jj) && neighbors(ii, jj))
            delta_est(ii, 1) =  delta_est(ii, 1) - weight_consensus * (se_in(ii, 1) - se_in(jj, 1));
        end

    end
end
               
        
end


